{"mappings":"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","sources":["src/scripts/index.js"],"sourcesContent":["const gridSize = 15;\nconst grid = document.querySelector('.grid');\nconst squares = document.getElementsByClassName('square');\nconst appleCountDisplay = document.getElementById('apple-count');\nconst scoreDisplay = document.getElementById('score');\nconst overlay = document.querySelector('.overlay');\nconst playerName = document.getElementById('player-name');\nconst leaderboard = document.querySelector('.table');\nlet currentSnake = [0,1,2];\nlet appleIndex = 6;\nlet speed = 0.95;\nlet direction, intervalTime, timerId, appleCount, score, players;\n\nwindow.onload = () => {\n    let storedPlayers = JSON.parse(localStorage.getItem('players'));\n    players = storedPlayers ? storedPlayers : [];\n    updateLeaderboard();\n};\n\n\nfunction createGrid() {\n    for (let i=0; i < gridSize*gridSize; i++) {\n        const square = document.createElement('div');\n        grid.appendChild(square);\n        square.classList.add('square');\n    }\n}\ncreateGrid();\n\n\nfunction setupGame() {\n    document.removeEventListener('keydown', saveScore);\n    overlay.style.display = 'none';\n    currentSnake.forEach(i => squares[i].classList.remove('snake'));\n    squares[appleIndex].innerHTML = '';\n    clearInterval(timerId);\n\n    currentSnake = [0,1,2];\n    direction = 1;\n    intervalTime = 1000;\n    appleCount = 0;\n    score = 0;\n    appleCountDisplay.textContent = appleCount;\n    scoreDisplay.textContent = score;\n\n    currentSnake.forEach(i => squares[i].classList.add('snake'));\n    document.addEventListener('keydown', startGame);\n}\nsetupGame();\n\n\nfunction generateApple() {\n    do {\n        appleIndex = Math.floor(Math.random() * squares.length);\n    } while (squares[appleIndex].classList.contains('snake'));\n    squares[appleIndex].innerHTML = '<img src=\"./images/apple.svg\" alt=\"apple-icon\" class=\"apple\">';\n}\n\n\nfunction startGame(event) {\n    if (event.key === 'Enter') {\n        document.removeEventListener('keydown', startGame);\n        document.addEventListener('keydown', controlGame);\n        timerId = setInterval(move, intervalTime);\n        generateApple();\n    }\n}\n\n\nfunction move() {\n    let snakeHead = currentSnake[currentSnake.length - 1];\n    let newSnakeHead, snakeTail;\n\n    if (\n        (snakeHead + gridSize >= gridSize*gridSize && direction === gridSize ) ||\n        (snakeHead % gridSize === gridSize - 1 && direction === 1) ||\n        (snakeHead % gridSize === 0 && direction === -1) ||\n        (snakeHead - gridSize < 0 && direction === -gridSize) ||\n        squares[snakeHead + direction].classList.contains('snake')\n    ) {\n        playerName.value = '';\n        overlay.style.display = 'block';\n        playerName.focus();\n        document.addEventListener('keydown', saveScore);\n        clearInterval(timerId);\n        return;\n    }\n\n    currentSnake.push(snakeHead + direction);\n    newSnakeHead = currentSnake[currentSnake.length - 1];\n    snakeTail = currentSnake.shift();\n    squares[newSnakeHead].classList.add('snake');\n    squares[snakeTail].classList.remove('snake');\n\n    if (squares[newSnakeHead].firstElementChild) {\n        squares[newSnakeHead].innerHTML = '';\n        currentSnake.unshift(snakeTail);\n        squares[snakeTail].classList.add('snake');\n        appleCount++;\n        score = appleCount * 5;\n        appleCountDisplay.textContent = appleCount;\n        scoreDisplay.textContent = score;\n\n        generateApple();\n        clearInterval(timerId);\n\n        if (intervalTime > 200) intervalTime = intervalTime * speed;\n\n        timerId = setInterval(move, intervalTime);\n    }\n}\n\nfunction controlGame(event) {\n    switch (event.key) {\n        case 'ArrowRight':\n            direction = 1;\n            break;\n        case 'ArrowLeft':\n            direction = -1;\n            break;\n        case 'ArrowDown':\n            direction = gridSize;\n            break;\n        case 'ArrowUp':\n            direction = -gridSize;\n    }\n}\n\nfunction saveScore(event) {\n    if (event.key === 'Enter') {    \n        let storedPlayers = JSON.parse(localStorage.getItem('players'));\n        players = storedPlayers ? storedPlayers : [];\n        players.push({\n            name: playerName.value ? playerName.value : 'Anonymous',\n            score: score\n        })\n        players.sort((a,b) => {\n            if (a.score >= b.score) return 0\n            if (a.score < b.score) return 1\n        })\n        players.splice(10,1);\n        localStorage.setItem('players', JSON.stringify(players));\n        updateLeaderboard();\n        setupGame();\n    }\n}\n\nfunction updateLeaderboard() {\n    let html = '';\n    players.forEach((player,index) => {\n        html += `\n            <p>${index+1}</p>\n            <p>${player.name}</p>\n            <p class=\"score\">${player.score} pts</p>\n        `\n    })\n    leaderboard.innerHTML = html;\n}"],"names":["gridSize","grid","document","querySelector","squares","getElementsByClassName","appleCountDisplay","getElementById","scoreDisplay","overlay","playerName","leaderboard","direction","intervalTime","timerId","appleCount","score","players","currentSnake","appleIndex","speed","createGrid","i","square","createElement","appendChild","classList","add","setupGame","removeEventListener","saveScore","style","display","forEach","remove","innerHTML","clearInterval","textContent","addEventListener","startGame","generateApple","Math","floor","random","length","contains","event","key","controlGame","setInterval","move","newSnakeHead","snakeTail","snakeHead","value","focus","push","shift","firstElementChild","unshift","storedPlayers","JSON","parse","localStorage","getItem","name","sort","a","b","splice","setItem","stringify","updateLeaderboard","html","player","index","window","onload"],"version":3,"file":"index.65bb4a49.js.map"}